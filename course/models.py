from django.db import models
from tinymce.models import HTMLField

# Create your models here.

CHOICES_CITY = (
    ("Seattle", "Seattle"),
    ("New York", "New York"),
    ("Philadelphia", "Philadelphia"),
    ("Boston", "Boston"),
    ("Chicago", "Chicago"),
    ("Los Angeles", "Los Angeles"),
    ("San Diego", "San Diego"),
    ("Dallas", "Dallas"),
    ("Houston", "Houston"),
    ("Atlanta", "Atlanta"),
    ("Miami", "Miami"),
    ("Surat", "Surat"),
    ("Valsad", "Valsad"),
    ("Kolkata", "Kolkata"),
    ("Ahmedabad", "Ahmedabad"),
)

CHOICES_COUNTRY = (
    ('AF', 'AF'),
    ('AL', 'AL'),
    ('DZ', 'DZ'),
    ('AS', 'AS'),
    ('AD', 'AD'),
    ('AO', 'AO'),
    ('AQ', 'AQ'),
    ('AG', 'AG'),
    ('AR', 'AR'),
    ('AM', 'AM'),
    ('AW', 'AW'),
    ('AU', 'AU'),
    ('AT', 'AT'),
    ('AZ', 'AZ'),
    ('BS', 'BS'),
    ('BH', 'BH'),
    ('BD', 'BD'),
    ('BB', 'BB'),
    ('BY', 'BY'),
    ('BE', 'BE'),
    ('BZ', 'BZ'),
    ('BJ', 'BJ'),
    ('BM', 'BM'),
    ('BT', 'BT'),
    ('BO', 'BO'),
    ('BA', 'BA'),
    ('BW', 'BW'),
    ('BV', 'BV'),
    ('BR', 'BR'),
    ('IO', 'IO'),
    ('BN', 'BN'),
    ('BG', 'BG'),
    ('BF', 'BF'),
    ('BI', 'BI'),
    ('KH', 'KH'),
    ('CM', 'CM'),
    ('CA', 'CA'),
    ('CV', 'CV'),
    ('KY', 'KY'),
    ('CF', 'CF'),
    ('TD', 'TD'),
    ('CL', 'CL'),
    ('CN', 'CN'),
    ('CX', 'CX'),
    ('CC', 'CC'),
    ('CO', 'CO'),
    ('KM', 'KM'),
    ('CG', 'CG'),
    ('CD', 'CD'),
    ('CK', 'CK'),
    ('CR', 'CR'),
    ('CI', 'CI'),
    ('HR', 'HR'),
    ('CU', 'CU'),
    ('CY', 'CY'),
    ('CZ', 'CZ'),
    ('DK', 'DK'),
    ('DJ', 'DJ'),
    ('DM', 'DM'),
    ('DO', 'DO'),
    ('EC', 'EC'),
    ('EG', 'EG'),
    ('SV', 'SV'),
    ('GQ', 'GQ'),
    ('ER', 'ER'),
    ('EE', 'EE'),
    ('ET', 'ET'),
    ('FK', 'FK'),
    ('FO', 'FO'),
    ('FJ', 'FJ'),
    ('FI', 'FI'),
    ('FR', 'FR'),
    ('GF', 'GF'),
    ('PF', 'PF'),
    ('TF', 'TF'),
    ('GA', 'GA'),
    ('GM', 'GM'),
    ('GE', 'GE'),
    ('DE', 'DE'),
    ('GH', 'GH'),
    ('GI', 'GI'),
    ('GR', 'GR'),
    ('GL', 'GL'),
    ('GD', 'GD'),
    ('GP', 'GP'),
    ('GU', 'GU'),
    ('GT', 'GT'),
    ('GN', 'GN'),
    ('GW', 'GW'),
    ('GY', 'GY'),
    ('HT', 'HT'),
    ('HM', 'HM'),
    ('HN', 'HN'),
    ('HK', 'HK'),
    ('HU', 'HU'),
    ('IS', 'IS'),
    ('IN', 'IN'),
    ('ID', 'ID'),
    ('IR', 'IR'),
    ('IQ', 'IQ'),
    ('IE', 'IE'),
    ('IL', 'IL'),
    ('IT', 'IT'),
    ('JM', 'JM'),
    ('JP', 'JP'),
    ('JO', 'JO'),
    ('KZ', 'KZ'),
    ('KE', 'KE'),
    ('KI', 'KI'),
    ('KP', 'KP'),
    ('KR', 'KR'),
    ('KW', 'KW'),
    ('KG', 'KG'),
    ('LA', 'LA'),
    ('LV', 'LV'),
    ('LB', 'LB'),
    ('LS', 'LS'),
    ('LR', 'LR'),
    ('LY', 'LY'),
    ('LI', 'LI'),
    ('LT', 'LT'),
    ('LU', 'LU'),
    ('MO', 'MO'),
    ('MK', 'MK'),
    ('MG', 'MG'),
    ('MW', 'MW'),
    ('MY', 'MY'),
    ('MV', 'MV'),
    ('ML', 'ML'),
    ('MT', 'MT'),
    ('MH', 'MH'),
    ('MQ', 'MQ'),
    ('MR', 'MR'),
    ('MU', 'MU'),
    ('YT', 'YT'),
    ('MX', 'MX'),
    ('FM', 'FM'),
    ('MD', 'MD'),
    ('MC', 'MC'),
    ('MN', 'MN'),
    ('ME', 'ME'),
    ('MS', 'MS'),
    ('MA', 'MA'),
    ('MZ', 'MZ'),
    ('MM', 'MM'),
    ('NA', 'NA'),
    ('NR', 'NR'),
    ('NP', 'NP'),
    ('NL', 'NL'),
    ('AN', 'AN'),
    ('NC', 'NC'),
    ('NZ', 'NZ'),
    ('NI', 'NI'),
    ('NE', 'NE'),
    ('NG', 'NG'),
    ('NU', 'NU'),
    ('NF', 'NF'),
    ('MP', 'MP'),
    ('NO', 'NO'),
    ('OM', 'OM'),
    ('PK', 'PK'),
    ('PW', 'PW'),
    ('PS', 'PS'),
    ('PA', 'PA'),
    ('PG', 'PG'),
    ('PY', 'PY'),
    ('PE', 'PE'),
    ('PH', 'PH'),
    ('PN', 'PN'),
    ('PL', 'PL'),
    ('PT', 'PT'),
    ('PR', 'PR'),
    ('QA', 'QA'),
    ('RE', 'RE'),
    ('RO', 'RO'),
    ('RU', 'RU'),
    ('RW', 'RW'),
    ('SH', 'SH'),
    ('KN', 'KN'),
    ('LC', 'LC'),
    ('PM', 'PM'),
    ('VC', 'VC'),
    ('WS', 'WS'),
    ('SM', 'SM'),
    ('ST', 'ST'),
    ('SA', 'SA'),
    ('SN', 'SN'),
    ('RS', 'RS'),
    ('SC', 'SC'),
    ('SL', 'SL'),
    ('SG', 'SG'),
    ('SK', 'SK'),
    ('SI', 'SI'),
    ('SB', 'SB'),
    ('SO', 'SO'),
    ('ZA', 'ZA'),
    ('GS', 'GS'),
    ('SS', 'SS'),
    ('ES', 'ES'),
    ('LK', 'LK'),
    ('SD', 'SD'),
    ('SR', 'SR'),
    ('SJ', 'SJ'),
    ('SZ', 'SZ'),
    ('SE', 'SE'),
    ('CH', 'CH'),
    ('SY', 'SY'),
    ('TW', 'TW'),
    ('TJ', 'TJ'),
    ('TZ', 'TZ'),
    ('TH', 'TH'),
    ('TL', 'TL'),
    ('TG', 'TG'),
    ('TK', 'TK'),
    ('TO', 'TO'),
    ('TT', 'TT'),
    ('TN', 'TN'),
    ('TR', 'TR'),
    ('TM', 'TM'),
    ('TC', 'TC'),
    ('TV', 'TV'),
    ('UG', 'UG'),
    ('UA', 'UA'),
    ('AE', 'AE'),
    ('GB', 'GB'),
    ('US', 'US'),
    ('UM', 'UM'),
    ('UY', 'UY'),
    ('UZ', 'UZ'),
    ('VU', 'VU'),
    ('VE', 'VE'),
    ('VN', 'VN'),
    ('VG', 'VG'),
    ('VI', 'VI'),
    ('WF', 'WF'),
    ('EH', 'EH'),
    ('YE', 'YE'),
    ('ZM', 'ZM'),
    ('ZW', 'ZW')
)


class City(models.Model):
    city_name = models.CharField(
        max_length=500,
        null=True,
        blank=True,
        verbose_name="City Name",
    )
    country_code = models.CharField(
        max_length=200,
        null=True,
        blank=True)

    def __str__(self):
        return self.city_name


class Country(models.Model):
    country_name = models.CharField(
        max_length=500,
        choices=CHOICES_COUNTRY,
        default=CHOICES_COUNTRY[0],
        verbose_name="Choose Your Country",
    )
    start_date = models.DateField(
        null=True,
        blank=True,
        verbose_name="Course Starting Date",
    )
    ending_date = models.DateField(
        null=True,
        blank=True,
        verbose_name="Course Ending Date",
    )
    cont_status = models.BooleanField(default=False)

    def __str__(self):
        return self.country_name



class Course(models.Model):
    course_city = models.ForeignKey(
        City,
        on_delete=models.CASCADE,
        null=True,
        blank=True,
        verbose_name="Course City Name",
    )
    course_title = models.CharField(
        max_length=500,
        null=True,
        blank=True,
        verbose_name="Course Title",
    )
    course_start_date = models.DateField(
        null=True,
        blank=True,
        verbose_name="Course Starting Date",
    )
    course_end_date = models.DateField(
        null=True,
        blank=True,
        verbose_name="Course Ending Date",
    )
    course_image = models.ImageField(
        upload_to="Course Image", null=True, blank=True
    )
    course_description = HTMLField(
        null=True,
        blank=True,
        verbose_name="Course Description",
    )
    course_objective = HTMLField(
        null=True,
        blank=True,
        verbose_name="Course Objectives",
    )
    course_eligibility = models.TextField(
        null=True,
        blank=True,
        verbose_name="Who can take the course",
    )
    course_outline = HTMLField(
        null=True, blank=True, verbose_name="Course Outline"
    )
    professionals_linkedIn = models.URLField(
        null=True,
        blank=True,
        verbose_name="Blockchain Professionals in Seattle on LinkedIn",
    )
    companies_linkedIn = models.URLField(
        null=True,
        blank=True,
        verbose_name="Blockchain Companies in Seattle on LinkedIn",
    )
    jobs = models.URLField(
        null=True,
        blank=True,
        verbose_name="Blockchain Jobs in Seattle",
    )
    LinkedIn_group_called = models.URLField(
        null=True,
        blank=True,
        verbose_name="Join LinkedIn group called Blockchain in Seattle",
    )
    Facebook_group_called = models.URLField(
        null=True,
        blank=True,
        verbose_name="Join Facebook group called Blockchain in Seattle",
    )
    Meetup_called = models.URLField(
        null=True,
        blank=True,
        verbose_name="Join Meetup called Blockchain Meetup in Seattle",
    )
    status = models.BooleanField(default=False)

    def __str__(self):
        return self.course_title
